---
title: "Colombia bird analyses"
params: 
  path: "/Users/Jacob"
format: html
editor: visual
---

# Data formatting

## Baseline species lists

#### Get a species list for Colombia under BirdLife Taxonomy

```{r}
source("code/bird_lists_maps_traits/Species_lists.R")
```

Inputs are:

-   inputs/gadm36_COL_shp/gadm36_COL_0.shp, a shapefile for Colombia

-   private_inputs/BOTW/BOTW.gdb, the 2019 BirdLife range maps. Not shareable without permission.

-   private_inputs/HBW_eBird_taxonomy.csv, a BirdLife/eBird interconversion table prepared by Marshall Iliff. Not shareable without permission.

-   inputs/Bird_elevations_initial.csv, bird elevations from Donegan, without yet having all BirdLife splits implemented.

-   inputs/species_to_check_checked.csv, a manually edited file that provides information about taxa that don't match 1:1 between Donegan and BirdLife. (note: this is awkwardly placed as an input, as it relies on the manual checking of outputs/species_to_check.csv. We designate it as an input so that the pipeline can be run from start to finish consistently)

-   inputs/Pulido_phylogeny/JETZ TREES/All_birds_MaxCladeCredTree.txt, Pulido-Santacruz & Weir consensus tree.

-   inputs/elton.txt, Elton Traits data. Downloaded from https://ndownloader.figshare.com/files/5631081 and saved to inputs on running "Species_lists.R".

Outputs are:

-   outputs/colombia_species.Rdata

-   outputs/species_to_check.csv

-   outputs/recast_birdlife_range_maps.Rdata

-   outputs/initial_species_list.csv

Note: script slow to run for the first time (but faster once some outputs are generated and saved).

#### Get a species list for all species overlapping neotropical forest ecoregions following BirdLife taxonomy.

We use this later to match taxonomically to the Parker database (it's easier and less error-prone to do so if we have all neotropical species; note that every Colombian species identified above gets included as overlapping at least one neotropical forest ecoregion (this is on the basis of BirdLife maps, not on the basis of actual occurrence in forests).

```{r}
source("code/bird_lists_maps_traits/nf_species_list.R")
```

Inputs:

-   inputs/Continents/continent.shp, a continents shapefile

-   inputs/WWF_ecoregions/wwf_terr_ecos.shp, WWF terrestrial ecoregions

-   inputs/WWF_ecoregions/nf_masks/florida_mask.kml, inputs/WWF_ecoregions/nf_masks/baja_mask.kml, custom drawn masks for bits of neotropical forest in Florida and Baja California

-   outputs/recast_birdlife_range_maps.Rdata

Outputs:

-   outputs/nf_species.Rdata

## Sampling point data

#### **Import and process raw GPS coordinates for Jacob's points**

```{r}
source("code/GIS_processing/coord_processing.R")
```

Inputs:

-   inputs/Jacob_data_v1.2.csv, Jacob bird data entered; contains coords for Jacob points.

-   Multiple files in the GIS folder, which gives GPS points downloaded from Jacob's GPS.

-   ee\$Image('JAXA/ALOS/AW3D30/V2_2'), ALOS elevations

Outputs:

-   outputs/socolar_points_v1.csv

#### **Import and process coordinates for all points, add certain covariates**

```{r}
source("code/GIS_processing/points_formatting.R")
```

Inputs:

-   GIS/Points/CO_sampling_points_metafile, Felicity's metafile

-   GIS/Points/James_andes_points.csv, James' Andes points

-   GIS/Points/Llanos master habitat data.xlsx James' LLanos points

-   /Users/jacobsocolar/Google Drive/Simon_data/data/points/points_EasternCordillera.rds, Simon's points

-   ee\$Image('JAXA/ALOS/AW3D30/V2_2'), ALOS elevations

-   Birds/James_WAndes_all_birds.csv, James' Andes bird data

-   Birds/James_llanos_all_birds.csv, James' Llanos bird data

-   /Users/jacobsocolar/Google Drive/Simon_data/data/bird data_Jan&Jun2019/data_Jan&Jun2019_currentVersion.xlsx, Simon's bird data

-   Birds/Jacob_data_v1.2.csv Jacob bird data

-   inputs/subregions.kml, bespoke shapes for defining subregions in the analysis

Outputs:

-   outputs/all_pts.RDS

#### Import and format bird survey data

```{r}
source("code/bird_data_processing/bird_import_and_cleaning.R")
```

Inputs:

-   private_inputs/HBW_eBird_taxonomy.csv, a BirdLife/eBird interconversion table prepared by Marshall Iliff. Not shareable without permission.

-   inputs/James_WAndes_all_birds.csv, James Andes data

-   inputs/James_andes_points.csv, James Andes points

-   inputs/James_llanos_all_birds.csv, James llanos data

-   inputs/data_Jan&Jun2019_currentVersion.xlsx, Simon data

-   inputs/Simon_list_21-05-2019.csv, a lookup table for Simon data prepared by JBS to match common names from Simon's data to common names from eBird taxonomy

-   outputs/colombia_species.Rdata

-   inputs/Jacob_data_v1.2.csv, Jacob data

-   outputs/all_pts.RDS

Outputs:

-   outputs/bird_surveys\_\<Sys.time()\>.RDS

-   outputs/bird_surveys_current.RDS

## Species ranges

#### **Create polygons for biogeographic clipping**

Inputs:

-   inputs/hydrosheds/hybas_sa_lev01-06_v1c/hybas_sa_lev02_v1c.shp, and multiple other files that replace the `lev02` with `lev03`, `lev04`, and `lev05`. Hydrosheds layers.

-   Hand drawn biogeographic clips for regions not well delimited by drainage:

    -   biogeographic_clips/mountains_clips/centralAndes\_\_cauca\_\_magdalena.kml

    -   biogeographic_clips/mountains_clips/SNSM\_\_guajira_valledupar.kml

    -   biogeographic_clips/mountains_clips/pasto\_\_pacific.kml

    -   biogeographic_clips/mountains_clips/tacarcuna\_\_pacific.kml

The above inputs are called by `hydrosheds_extraction.R` which is sourced inside of `combined_bird_maps.R` and `species_covariate_formatting.R` (see below)

#### **Load and pre-process Ayerbe maps**

```{r}
source('code/bird_lists_maps_traits/ayerbe_maps.R')
```

Inputs:

-   inputs/gadm36_COL_shp/gadm36_COL_0.shp, colombia shapefile

-   multiple shapefiles in inputs/rangemaps_Quinones, the Ayerbe maps.

-   multiple files in inputs/ayerbe_updates/ayerbe_mask, handmade masks for splits of species lumped by Ayerbe

-   multiple files in inputs/ayerbe_updates/ayerbe_missing, handmade range maps for a handful of species missing from Ayerbe

Outputs:

-   outputs/ayerbe_maps.RDS

#### **Create geographically buffered Ayerbe maps.**

```{r}
source("code/bird_lists_maps_traits/combined_bird_maps.R")
```

Inputs:

-   inputs/gadm36_COL_shp/gadm36_COL_0.shp, Colombia shapefile

-   inputs/ayerbe_updates/ayerbe_missing2/Troglodytes_ochraceus/Troglodytes_ochraceus.kml, one more random update

-   inputs/rufula_updates/, to deal with Grallaria rufula split

-   multiple files in inputs/ayerbe_map_updates for bespoke range map updates

-   outputs/ayerbe_maps.RDS

Outputs:

-   outputs/ayerbe_list.RDS

-   outputs/ayerbe_buffered_ranges.RDS

-   outputs/point_distances_biogeographic_clip_ayerbe.RDS

## Species traits

#### **Scrape birdlife website for trait info.**

Note: this has been shifted outside of the pipeline with it's output passed in as an input

```{r}
# source("/bird_lists_maps_traits/birdlife_scraper.R")
```

Inputs:

-   /Users/jacobsocolar/Dropbox/Work/Colombia/Data/Birds/species_list_creation/HBW-BirdLife_Checklist_v4_Dec19/HBW-BirdLife_List_of_Birds_v4.xlsx, the 2019 BirdLife checklist

Outputs:

-   /Users/jacobsocolar/Dropbox/Work/Useful_data/BirdlifeTraits/neotrop_pages.Rdata

-   /Users/jacobsocolar/Dropbox/Work/Useful_data/BirdlifeTraits/birdlife_traits.Rdata

#### **Update Parker databases to birdlife taxonomy.**

```{r}
source("code/bird_lists_maps_traits/parker_standardization.R")
```

Inputs:

-   inputs/Parker_Stotz_Fitzpatrick_1996/databases/adata.csv, breeders

-   inputs/Parker_Stotz_Fitzpatrick_1996/databases/cdata.csv, nonbreeders

-   private_inputs/HBW_eBird_taxonomy.csv, Iliff's BirdLife/Ebird conversion again. Not shareable w/o permission.

Outputs:

-   outputs/new_parker.csv

#### **Read in an pre-process elevational limits.**

```{r}
# source("/bird_lists_maps_traits/elevations_prep_and_exploration.R")
```

Note: this has been shifted outside of the pipeline with it's output passed in as an input

Inputs:

-   inputs/elevational_ranges_Quinones.csv, the range limits from Ayerbe

Outputs:

-   outputs/

-   The output of the this script is then modified by hand to produce inputs/elevations_final.csv. (note: this is awkwardly placed as an input, as it relies on the manual checking of outputs/species_to_check.csv. We designate it as an input so that the pipeline can be run from start to finish consistently)

#### **Create and format file with species covariates.**

```{r}
source("code/bird_lists_maps_traits/species_covariate_formatting.R")
```

Inputs:

-   inputs/elevations_final.csv, created by hand from output of above script

-   inputs/gadm36_COL_shp/gadm36_COL_0.shp, Colombia shapefile

-   inputs/HBW-BirdLife_Checklist_v4_Dec19/Handbook of the Birds of the World and BirdLife International digital checklist of the birds of the world_Version_4.xlsx, BirdLife checklist

-   inputs/elton.txt, elton traits

-   outputs/parker_new.csv

-   outputs/initial_species_list.csv

-   outputs/traits.RDS

#### Read and pre-process migratory dates

```{r}
source("code/bird_data_processing/migratory_dates.R")
```

Inputs:

-   inputs/migratory.csv, handmade table of migratory dates

Outputs:

-   outputs/mig_dates.RDS

## Format for analysis

#### Produce final analysis version of dataset

```{r}
source("code/bird_data_processing/format_for_analysis.R")
```

Inputs:

-   sources `get_mainland.R` which has as inputs: inputs/gadm36_COL_shp/gadm36_COL_0.shp, colombia shapefile

Outputs:

-   outputs/birds.RDS
-   outputs/birds_analysis_dataframe.RDS
-   outputs/birds_fd.RDS

# Analysis & model fitting/processing

Code to fit occupancy model, run model checks, and extract covariates required for downstream processing.

## Generate flocker data

Note: have moved this outside of the model fitting script and it also generates a unit covariates file. TODO: update model fitting script accordingly (and move it within pipeline).

```{r, }
source("code/occ_modelling/make_flocker_data.R")
```

Inputs:

-   outputs/bird_stan_data9_package.RDS

Outputs:

-   outputs/flocker_data.R

-   outputs/unit_covariates.R

## Fit model

```{r, eval = FALSE}
source("bird_analysis_plotting/run_stan/flocker_model.R")
```

Fit flocker model to bird dataset, outputting both the flocker fit and cmdstanr .csv files. Run using flocker version 0.1-0. Note that this takes approx. a month to run. These were manually transferred to output locations (note: change output locations?)

Inputs:

-   flocker data

Outputs:

-   outputs/stan_out/...

-   outputs/\<brmfit\>

## Model diagnostic checks

diagnostics

## Model wrangling

Code to extract coefficients and generate predictive rasters from model for use in downstream analysis etc.

### Calculate regions to predict over and generate prediction raster

First, trim WWF ecoregions to boundaries of Colombia, and to only include regions that we intend to predict over.

```{r}
source("code/GIS_processing/clean_WWF_ecoregions.R")
```

Inputs:

-   outputs/birds.RDS

-   outputs/WWF_ecoregions2/wwf_terr_ecos.shp - TODO: check that these ecoregions are the same as in ecoregions and remove redundancy if so.

Outputs:

-   outputs/WWF_terrestrial_ecoregions.rds

-   figures/map_WWF_terr_ecoregions.png

-   outputs/WWF_terr_ecoregions_mask.rds

Generate raster of distances and elevations across Colombia for predicting over (masked to regions of interest).

```{r}
source("code/occ_modelling/generate_prediction_raster.R")
```

Inputs:

-   outputs/ayerbe_list_updated.RDS

-   outputs/bird_stan_data6_package.RDS

-   outputs/birds.RDS

Outputs:

-   outputs/raster_elev.grd

-   outputs/raster_elev_AEA.grd

-   outputs/elev_raster/raster_elev_AEA_masked.grd

-   outputs/xy_lookup.rds

-   outputs/xy_lookup_stars.rds

-   outputs/pred_dt_species/\<\<species\>\>.rds

-   outputs/prediction_info_dt.rds

### Extract coefficients and generate linear predictor for species-level terms

Note that the script currently runs with thin_10 version of fm3, so generates a 400-draw object

```{r}
source("code/occ_modelling/compute_coefficients.R")
```

Inputs:

-   outputs/unit_covariates.RDS

-   outputs/fm3_thin_100.RDS

Outputs:

-   outputs/lpo_and_coefs\_\<n_draws\>draws.rds

### Generate predicted occupancy rasters

Generates posterior pasture and forest predictions for N posterior draws.

```{r}
source("code/occ_modelling/compute_predicted_occupancy.R")
```

Inputs:

-   outputs/lpo_and_coefs.rds

Outputs:

-   outputs/predicted_occupancy_dts/posterior_pasture\_\<\<iteration id\>\>.rds

-   outputs/predicted_occupancy_dts/posterior_forest\_\<\<iteration id\>\>.rds

-   outputs/predicted_occupancy_dts/averaged_posterior\_\<\<number of draws\>\>.rds - this is redundant so remove at some point.

## Model predictive checks

PPCs: i.e. code currently residing in bird_analysis_plotting/posterior_predictive_checks

# Analysis and generating figures

## Community sensitivity at varying spatial grain

```{r}
source("code/analysis_and_plotting/regional_windowing_analysis_original_version.R")
```

Inputs:

## GDM analysis

Analysis of raw data that doesn't rely on outputs from occupancy model.

```{r}
source("code/analysis_and_plotting/gdm/gdm_analysis.R")
```

Inputs:

-   ...

Outputs:

-   ...
